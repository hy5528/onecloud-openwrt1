#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: onecloud-lede

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/seed-lite.config
  DIY_P1_SH: sh/lede.sh
  DIY_P2_SH: sh/diy-part2.sh
  GEN_BURN_IMG_SH: sh/gen_burn_img.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 释放磁盘空间
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: 检查分支
      uses: actions/checkout@main

    - name: 编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo sed -i 's/azure\.//' /etc/apt/sources.list
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(cat dependson)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载自定义配置
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 升级自定义配置
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装自定义配置
      run: cd openwrt && ./scripts/feeds install -a
        
    - name: 加载自定义配置2
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载编译环境
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 制作直刷包
      run: |
          sudo apt install android-sdk-libsparse-utils
          ver="v0.3.1"
          curl -L -o ./AmlImg https://github.com/hzyitc/AmlImg/releases/download/$ver/AmlImg_${ver}_linux_amd64
          chmod +x ./AmlImg
          curl -L -o ./uboot.img https://github.com/hzyitc/u-boot-onecloud/releases/download/build-20221028-0940/eMMC.burn.img
          ./AmlImg unpack ./uboot.img burn/
          echo "::endgroup::"
          gunzip openwrt/bin/targets/*/*/*.gz
          diskimg=$(ls openwrt/bin/targets/*/*/*.img)
          loop=$(sudo losetup --find --show --partscan $diskimg)
          img_ext="openwrt.img"
          img_mnt="xd"
          rootfs_mnt="img"
          boot_img=$1${img_ext}
          boot_img_mnt=$1${img_mnt}
          rootfs_img_mnt=$1${rootfs_mnt}
          echo ${boot_img}
          echo ${boot_img_mnt}
          echo ${rootfs_img_mnt}
          sudo rm -rf ${boot_img}
          sudo rm -rf ${boot_img_mnt}
          sudo rm -rf ${rootfs_img_mnt}
          sudo dd if=/dev/zero of=${boot_img} bs=1M count=900
          sudo mkfs.ext4 ${boot_img}
          sudo mkdir ${boot_img_mnt}
          sudo mkdir ${rootfs_img_mnt}
          sudo mount ${boot_img} ${boot_img_mnt}
          sudo mount ${loop}p2 ${rootfs_img_mnt}
          cd ${rootfs_img_mnt}
          sudo cp -r * ../${boot_img_mnt}
          cd ..
          sudo sync
          sudo umount ${boot_img_mnt}
          sudo umount ${rootfs_img_mnt}
          sudo img2simg ${loop}p1 burn/boot.simg
          sudo img2simg openwrt.img burn/rootfs.simg
          sudo rm -rf *.img
          sudo losetup -d $loop
          cat <<EOF >>burn/commands.txt
          PARTITION:boot:sparse:boot.simg
          PARTITION:rootfs:sparse:rootfs.simg
          EOF
          prefix=$(ls openwrt/bin/targets/*/*/*.img | sed 's/\.img$//')
          burnimg=${prefix}.burn.img
          ./AmlImg pack $burnimg burn/
          for f in openwrt/bin/targets/*/*/*.burn.img; do
            sha256sum "$f" >"${f}.sha"
            xz -9 --threads=0 --compress "$f"
          done
          sudo rm -rf openwrt/bin/targets/*/*/*.img
          sudo rm -rf openwrt/bin/targets/*/*/*.gz
    - name: 查看磁盘使用情况
      if: (!cancelled())
      run: df -hT

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages feeds.buildinfo version.buildinfo sha256sums profiles.json *.sha *.manifest
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件到Releases
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: OpenWrt-lede_${{ env.OWRT_SOURCE }}_${{ env.OWRT_DATE }}
        body: |
          This is OpenWrt firmware for OneCloud
          ### 📒 Firmware information
          - 🚀 amlogic_meson8b 多功能版
          - 💋一键扩容 sh 1.sh
          - 💻 平台架构: ARMV7
          - ⚽ 固件源码: https://github.com/coolsnowwolf/lede
          - 💝 源码分支: master
          - 🌐 Default IP: 192.168.2.158
          - 🔑 Default username: root
          - 🔑 Default password: password

   
